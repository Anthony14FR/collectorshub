services:
  app:
    build:
      context: .
      target: production
      dockerfile: Dockerfile
    container_name: collectorshub_app_prod
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      - APP_NAME="Collector's Hub"
      - APP_ENV=production
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-https://collectorshub.fr}
      - ASSET_URL=${APP_URL}
      - FORCE_HTTPS=true
      - HTTPS=true

      - DB_CONNECTION=mysql
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-collectorshub_prod}
      - DB_USERNAME=${DB_USERNAME:-collectorshub_user}
      - DB_PASSWORD=${DB_PASSWORD}
      
      - BROADCAST_DRIVER=redis
      - CACHE_DRIVER=redis
      - FILESYSTEM_DISK=local
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
      - SESSION_LIFETIME=120
      
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
      - REDIS_PORT=6379
      
      - MAIL_MAILER=${MAIL_MAILER:-smtp}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME="${APP_NAME}"

      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URL="${APP_URL}/auth/google/callback"

      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_REDIRECT_URL="${APP_URL}/auth/discord/callback"
      
      - VITE_APP_NAME="${APP_NAME}"
      - VITE_APP_URL="${APP_URL}"
      - SENTRY_LARAVEL_DSN="${SENTRY_LARAVEL_DSN}"
      - SENTRY_TRACES_SAMPLE_RATE=1.0
      
    volumes:
      - app_storage:/var/www/html/storage
      - app_logs:/var/www/html/storage/logs
    networks:
      - collectorshub_network
    depends_on:
      - mariadb
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  mariadb:
    image: mariadb:latest
    container_name: collectorshub_mariadb_prod
    restart: unless-stopped
    environment:
      - MARIADB_DATABASE=${DB_DATABASE:-collectorshub_prod}
      - MARIADB_USER=${DB_USERNAME:-collectorshub_user}
      - MARIADB_PASSWORD=${DB_PASSWORD}
      - MARIADB_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-root}
    ports:
      - "3307:3307"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - collectorshub_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: collectorshub_redis_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-""} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - collectorshub_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # queue-worker:
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: Dockerfile
  #   container_name: collectorshub_queue_prod
  #   restart: unless-stopped
  #   command: php artisan queue:work --sleep=3 --tries=3 --max-time=3600
  #   environment:
  #     - APP_NAME=CollectorsHub
  #     - APP_ENV=production
  #     - APP_KEY=${APP_KEY}
  #     - APP_DEBUG=false
  #     - DB_CONNECTION=pgsql
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_DATABASE=${DB_DATABASE:-collectorshub_prod}
  #     - DB_USERNAME=${DB_USERNAME:-collectorshub_user}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - REDIS_HOST=redis
  #     - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
  #     - REDIS_PORT=6379
  #     - QUEUE_CONNECTION=redis
  #   volumes:
  #     - app_storage:/var/www/html/storage
  #   networks:
  #     - collectorshub_network
  #   depends_on:
  #     - postgres
  #     - redis
  #     - app

  # scheduler:
  #   build:
  #     context: .
  #     target: production
  #     dockerfile: Dockerfile
  #   container_name: collectorshub_scheduler_prod
  #   restart: unless-stopped
  #   command: sh -c "while true; do php artisan schedule:run && sleep 60; done"
  #   environment:
  #     - APP_NAME=CollectorsHub
  #     - APP_ENV=production
  #     - APP_KEY=${APP_KEY}
  #     - APP_DEBUG=false
  #     - DB_CONNECTION=pgsql
  #     - DB_HOST=postgres
  #     - DB_PORT=5432
  #     - DB_DATABASE=${DB_DATABASE:-collectorshub_prod}
  #     - DB_USERNAME=${DB_USERNAME:-collectorshub_user}
  #     - DB_PASSWORD=${DB_PASSWORD}
  #     - REDIS_HOST=redis
  #     - REDIS_PASSWORD=${REDIS_PASSWORD:-null}
  #     - REDIS_PORT=6379
  #   volumes:
  #     - app_storage:/var/www/html/storage
  #   networks:
  #     - collectorshub_network
  #   depends_on:
  #     - postgres
  #     - redis
  #     - app

networks:
  collectorshub_network:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_logs:
    driver: local 